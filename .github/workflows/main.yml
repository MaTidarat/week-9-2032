name: Push to DockerHub
run-name: ${{ github.actor }} is building and pushing container to DockerHub ðŸš€
on:
  push:
    branches:
      - Dev
env: 
   NEW_TAG_IMAGE: 1.0.0
  
jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set env
        run: echo "RELEASE_VERSION=${{ github.sha }}" >> $GITHUB_ENV
      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
          echo ${{ github.sha }}
          echo "version=v$(npm pkg get version | tr -d '\"')" >> $GITHUB_OUTPUT

      # - name: Get tag
      #     id: get_tag
      #     run: |
      #       git branch --show-current
      #       git pull

      # - name: Build Docker image
      #   uses: flownative/action-docker-build@v1
      #   with:
      #     tag_ref: ${{ github.ref }}
      #     image_name: ${{ secrets.DOCKER_USERNAME }}/week-9-2032
      #     registry_password: ${{ secrets.DOCKER_PASSWORD }}
      # - name: Scrape build info
      #   run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      # - name: Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ secrets.DOCKER_USERNAME }}/week-9-2032:${{ github.sha }}
      #     build-args: |
      #       GIT_VERSION_TAG=${{ env.RELEASE_VERSION }}
      #       GIT_COMMIT_MESSAGE=${{ github.event.head_commit.message }}
      #       GIT_VERSION_HASH=${{ github.sha }}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKER_USERNAME }}/week-9-2032:1.0.0

  deploy_to_k8s:

    name: Deploy Image to K8s Cluster
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4  

      - name: Create K8S Config
        env: 
             KUBECTL_CONFIG_CONTENT: ${{ secrets.KUBE_CONFIG }}
        run: |
             mkdir -p ~/.kube
             echo "$KUBECTL_CONFIG_CONTENT" > ~/.kube/config

      - name: Get Current Cluster
        run: kubectl config current-context
      
      - name: Check yq Version 
        run: yq --version
      
      - name: Define Image New Version
        run: |
              echo "image_with_new_tag=${{ secrets.DOCKER_USERNAME }}/week-9-2032:${{ github.sha }}" >> $GITHUB_ENV
              echo $image_with_new_tag

      - name: Update Image in Deployment K8s
        run: yq -i '.spec.template.spec.containers[0].image=strenv(image_with_new_tag)' ./manifest/dev/deployment.yaml

      - name: Display yaml file
        run: cat ./manifest/dev/deployment.yaml

      - name: Deploy Docker image New Version to K8s cluster
        run: kubectl apply -f ./manifest/dev/. -n group-3